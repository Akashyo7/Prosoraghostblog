name: Fly Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "master", "main" ]
    paths:
      - 'deploy/mysql/**'
      - 'deploy/ghost/**'
      - 'deploy/proxy/**'
      - '.github/workflows/fly-deploy.yml'

concurrency:
  group: fly-deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-mysql:
    name: Deploy MySQL
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1
      - name: Set MySQL secrets (if provided)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          if [ -n "${MYSQL_PASSWORD}" ]; then
            flyctl secrets set -a prosora-mysql MYSQL_PASSWORD="${MYSQL_PASSWORD}"
          else
            echo "MYSQL_PASSWORD not set in GitHub Secrets; skipping."
          fi
          if [ -n "${MYSQL_ROOT_PASSWORD}" ]; then
            flyctl secrets set -a prosora-mysql MYSQL_ROOT_PASSWORD="${MYSQL_ROOT_PASSWORD}"
          else
            echo "MYSQL_ROOT_PASSWORD not set in GitHub Secrets; skipping."
          fi
      - name: Deploy prosora-mysql
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy -a prosora-mysql -c deploy/mysql/fly.toml --remote-only

  deploy-ghost:
    name: Deploy Ghost
    needs: deploy-mysql
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1
      - name: Set Ghost secrets (if provided)
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MAILGUN_SMTP_PASSWORD: ${{ secrets.MAILGUN_SMTP_PASSWORD }}
        run: |
          if [ -n "${DB_PASSWORD}" ]; then
            flyctl secrets set -a prosora-ghost database__connection__password="${DB_PASSWORD}"
          else
            echo "MYSQL_PASSWORD not set in GitHub Secrets; skipping DB password."
          fi
          if [ -n "${MAILGUN_SMTP_PASSWORD}" ]; then
            flyctl secrets set -a prosora-ghost mail__options__auth__pass="${MAILGUN_SMTP_PASSWORD}"
          else
            echo "MAILGUN_SMTP_PASSWORD not set in GitHub Secrets; skipping mail secret."
          fi
      - name: Deploy prosora-ghost
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy -a prosora-ghost -c deploy/ghost/fly.toml --remote-only
      - name: Show Ghost logs on failure
        if: failure()
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl status -a prosora-ghost || true
          flyctl logs -a prosora-ghost --since 15m || true

  deploy-activitypub:
    name: Deploy ActivityPub
    needs: deploy-ghost
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1
      - name: Deploy prosora-activitypub
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy -a prosora-activitypub -c deploy/activitypub/fly.toml --remote-only
      - name: Show ActivityPub logs on failure
        if: failure()
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl status -a prosora-activitypub || true
          flyctl logs -a prosora-activitypub --since 15m || true

  deploy-proxy:
    name: Deploy Proxy (Caddy)
    needs: [deploy-ghost, deploy-activitypub]
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@v1
      - name: Deploy prosora-proxy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl deploy -a prosora-proxy -c deploy/proxy/fly.toml --remote-only
      - name: Show Proxy logs on failure
        if: failure()
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          flyctl status -a prosora-proxy || true
          flyctl logs -a prosora-proxy --since 15m || true